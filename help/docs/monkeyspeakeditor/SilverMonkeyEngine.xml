<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>SilverMonkeyEngine</name>
  </assembly>
  <members>
    <member name="T:SilverMonkeyEngine.BaseSubSystem">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:SilverMonkeyEngine.BaseSubSystem</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.BaseSubSystem.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.BaseSubSystem</parameter>
          </include>
        </markup>
      </summary>
      <param name="FurcSession">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>FurcSession</parameter>
            <parameter>M:SilverMonkeyEngine.BaseSubSystem.#ctor(SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:SilverMonkeyEngine.BaseSubSystem.FurcadiaSession">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.BaseSubSystem.FurcadiaSession</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.BaseSubSystem.ParseServerChannel(System.String,System.Boolean@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.BaseSubSystem.ParseServerChannel(System.String,System.Boolean@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="ServerData">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ServerData</parameter>
            <parameter>M:SilverMonkeyEngine.BaseSubSystem.ParseServerChannel(System.String,System.Boolean@)</parameter>
          </include>
        </markup>
      </param>
      <param name="Handled">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Handled</parameter>
            <parameter>M:SilverMonkeyEngine.BaseSubSystem.ParseServerChannel(System.String,System.Boolean@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:SilverMonkeyEngine.BotOptions">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:SilverMonkeyEngine.BotOptions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.BotOptions.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.BotOptions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.BotOptions.#ctor(System.String@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.BotOptions</parameter>
          </include>
        </markup>
      </summary>
      <param name="BFile">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>BFile</parameter>
            <parameter>M:SilverMonkeyEngine.BotOptions.#ctor(System.String@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:SilverMonkeyEngine.BotOptions.AutoConnect">
      <summary>
 Sets the bot to auto conect to the serer
 </summary>
      <returns></returns>
    </member>
    <member name="P:SilverMonkeyEngine.BotOptions.BotController">
      <summary>
 Furre controlling the Bot aka Bot Admin
 </summary>
      <returns>
 Furcadia String
 </returns>
    </member>
    <member name="P:SilverMonkeyEngine.BotOptions.BotControllerShortName">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.BotOptions.BotControllerShortName</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.BotOptions.BotPath">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.BotOptions.BotPath</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.BotOptions.DestinationFile">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.BotOptions.DestinationFile</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.BotOptions.DreamURL">
      <summary>
 Dream Url to send the bot to when connected
 </summary>
      <returns></returns>
    </member>
    <member name="P:SilverMonkeyEngine.BotOptions.GoMapIDX">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.BotOptions.GoMapIDX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.BotOptions.log">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.BotOptions.log</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.BotOptions.LogIdx">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.BotOptions.LogIdx</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.BotOptions.LogNameBase">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.BotOptions.LogNameBase</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.BotOptions.LogOption">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.BotOptions.LogOption</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.BotOptions.LogPath">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.BotOptions.LogPath</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.BotOptions.MonkeySpeakEngineOptions">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.BotOptions.MonkeySpeakEngineOptions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.BotOptions.Name">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.BotOptions.Name</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.BotOptions.SaveBotSettings">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.BotOptions.SaveBotSettings</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:SilverMonkeyEngine.BotSession">
      <summary>
 This Instance handles the current Furcadia Session.
 <para>
 Part1: Manage MonkeySpeak Engine Start,Stop,Restart. System Variables,
        MonkeySpeak Execution Triggers
 </para><para>
 Part2: Furcadia Proxy Controls, In/Out Ports, Host, Character Ini file.
        Connect, Disconnect, Reconnect
 </para><para>
 Part2a: Proxy Functions do link to Monkey Speak trigger execution
 </para><para>
 Part3: This Class Links loosley to the GUI
 </para></summary>
    </member>
    <member name="M:SilverMonkeyEngine.BotSession.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.BotSession</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.BotSession.#ctor(SilverMonkeyEngine.BotOptions@)">
      <summary>
 New BotSession with Proxy Settings
 </summary>
      <param name="BotSessionOptions">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>BotSessionOptions</parameter>
            <parameter>M:SilverMonkeyEngine.BotSession.#ctor(SilverMonkeyEngine.BotOptions@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:SilverMonkeyEngine.BotSession.BotController">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.BotSession.BotController</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.BotSession.Connect">
      <summary>
 Starts the Furcadia Connection Process
 </summary>
    </member>
    <member name="M:SilverMonkeyEngine.BotSession.Disconnect">
      <summary>
 Disconnect from the Game Server and Client
 </summary>
    </member>
    <member name="M:SilverMonkeyEngine.BotSession.Dispose">
      <summary>
        <markup>
          <include item="SMCAutoDocDispose">
            <parameter>SilverMonkeyEngine.BotSession</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.BotSession.Dispose(System.Boolean)">
      <summary>
        <markup>
          <include item="SMCAutoDocDisposeBool">
            <parameter>SilverMonkeyEngine.BotSession</parameter>
          </include>
        </markup>
      </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>SilverMonkeyEngine.BotSession</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:SilverMonkeyEngine.BotSession.IsBotController">
      <summary>
 Is the Current executing Furre the Bot Controller?
 </summary>
      <returns>
 True on sucess
 </returns>
    </member>
    <member name="P:SilverMonkeyEngine.BotSession.MainEngine">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.BotSession.MainEngine</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.BotSession.MSpage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.BotSession.MSpage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:SilverMonkeyEngine.BotSession.objHost">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:SilverMonkeyEngine.BotSession.objHost</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.BotSession.ParseServerChannel(System.String,System.Boolean)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.BotSession.ParseServerChannel(System.String,System.Boolean)</parameter>
          </include>
        </markup>
      </summary>
      <param name="data">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>data</parameter>
            <parameter>M:SilverMonkeyEngine.BotSession.ParseServerChannel(System.String,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="Handled">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Handled</parameter>
            <parameter>M:SilverMonkeyEngine.BotSession.ParseServerChannel(System.String,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.BotSession.SendToClientFormattedText(System.String,System.String)">
      <summary>
 Send a formatted string to the client and log window
 </summary>
      <param name="msg">
 Channel Subsystem?
 </param>
      <param name="data">
 Message to send
 </param>
    </member>
    <member name="T:SilverMonkeyEngine.PsResponseObject">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:SilverMonkeyEngine.PsResponseObject</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.PsResponseObject.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.PsResponseObject</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.PsResponseObject.PsObject">
      <summary>
 PheonixSpeak object to send to <see cref="T:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak" /></summary>
    </member>
    <member name="T:SilverMonkeyEngine.SmConstants">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:SilverMonkeyEngine.SmConstants</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.SmConstants.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.SmConstants</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:SilverMonkeyEngine.SmConstants.MS_Name">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:SilverMonkeyEngine.SmConstants.MS_Name</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:SilverMonkeyEngine.SmConstants.SmRegExOptions">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:SilverMonkeyEngine.SmConstants.SmRegExOptions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.EngineOptoons">
      <summary>
 MonkeySpeak Engine settings
 </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.EngineOptoons.#ctor">
      <summary>
 Default Constructor
 </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.EngineOptoons.BotController">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.EngineOptoons.BotController</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.EngineOptoons.MonkeySpeakScriptFile">
      <summary>
 Monkey Speak Script File Name
 </summary>
      <returns></returns>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.EngineOptoons.MonkeySpeakScriptVersion">
      <summary>
 Current Monkey Speak Script Version the Bot Supports
 </summary>
      <returns></returns>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.EngineOptoons.MS_Engine_Enable">
      <summary>
 Enable the Monkey Speak Engine
 </summary>
      <returns></returns>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.EngineOptoons.MS_File">
      <summary>
 Gets or sets the m s_ file.
 </summary>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.MainEngine">
      <summary>
 Silver Monkey's MonkeySpeak Engine with our Customizations
 </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.MainEngine.#ctor(SilverMonkeyEngine.Engine.EngineOptoons@,SilverMonkeyEngine.BotSession@)">
      <summary>
 Default Constructlor.
 <para>
 This Loads our MonkeyBeak Libraries
 </para></summary>
      <param name="Options">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Options</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.MainEngine.#ctor(SilverMonkeyEngine.Engine.EngineOptoons@,SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
      <param name="FurcSession">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>FurcSession</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.MainEngine.#ctor(SilverMonkeyEngine.Engine.EngineOptoons@,SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.MainEngine.Dispose">
      <summary>
        <markup>
          <include item="SMCAutoDocDispose">
            <parameter>SilverMonkeyEngine.Engine.MainEngine</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.MainEngine.Dispose(System.Boolean)">
      <summary>
        <markup>
          <include item="SMCAutoDocDisposeBool">
            <parameter>SilverMonkeyEngine.Engine.MainEngine</parameter>
          </include>
        </markup>
      </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>SilverMonkeyEngine.Engine.MainEngine</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.MainEngine.EngineRestart">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:SilverMonkeyEngine.Engine.MainEngine.EngineRestart</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.MainEngine.FurcadiaSession">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:SilverMonkeyEngine.Engine.MainEngine.FurcadiaSession</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.MainEngine.LoadFromScriptFile(System.String)">
      <summary>
 Wrapper Functions to read a Monkey Speak Script File and Pass
 the result to <see cref="M:Monkeyspeak.MonkeyspeakEngine.LoadFromString(Monkeyspeak.Page@,System.String)" /></summary>
      <param name="file">
 MonkeySpeak filename
 </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.MainEngine.LoadFromScriptFile(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.MainEngine.MS_Engine_Running">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:SilverMonkeyEngine.Engine.MainEngine.MS_Engine_Running</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.MainEngine.Options">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.MainEngine.Options</parameter>
          </include>
        </markup>
      </summary>
      <returns></returns>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.MonkeySpeakPage">
      <summary>
 Silver Monkey's <see cref="T:Monkeyspeak.Page" /> handler
 <para>
 In here we handle loading the Monkey Speak script file and load the
 Monkey Speak Default Libraries and the Silver Monkey Libraries
 </para></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.MonkeySpeakPage.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.MonkeySpeakPage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.MonkeySpeakPage.#ctor(SilverMonkeyEngine.Engine.MainEngine,Monkeyspeak.Page@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.MonkeySpeakPage</parameter>
          </include>
        </markup>
      </summary>
      <param name="engine">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>engine</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.MonkeySpeakPage.#ctor(SilverMonkeyEngine.Engine.MainEngine,Monkeyspeak.Page@)</parameter>
          </include>
        </markup>
      </param>
      <param name="Page">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Page</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.MonkeySpeakPage.#ctor(SilverMonkeyEngine.Engine.MainEngine,Monkeyspeak.Page@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.MonkeySpeakPage.Export">
      <summary>
 Export MonkeySpeak descriptions
 </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.MonkeySpeakPage.Export</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.MonkeySpeakPage.LoadLibrary(Monkeyspeak.Libraries.AbstractBaseLibrary@)">
      <summary>
 Loads monkey speak libraries
 </summary>
      <param name="Library"></param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.MonkeySpeakPage.LoadLibrary(System.Boolean@,System.Boolean)">
      <summary>
 Load Libraries into the engine
 </summary>
      <param name="LoadPlugins"></param>
      <param name="silent">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>silent</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.MonkeySpeakPage.LoadLibrary(System.Boolean@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
 reference to the active <see cref="T:Monkeyspeak.Page" /></returns>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.MonkeySpeakPage.MS_Engine_Running">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:SilverMonkeyEngine.Engine.MonkeySpeakPage.MS_Engine_Running</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.MonkeySpeakPage.MS_Stared">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:SilverMonkeyEngine.Engine.MonkeySpeakPage.MS_Stared</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.MonkeySpeakPage.MS_Started">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.MonkeySpeakPage.MS_Started</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.MonkeySpeakPage.MS_Started</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.MonkeySpeakPage.PageSetVariable(System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.MonkeySpeakPage.PageSetVariable(System.Collections.Generic.Dictionary{System.String,System.Object})</parameter>
          </include>
        </markup>
      </summary>
      <param name="VariableList">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>VariableList</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.MonkeySpeakPage.PageSetVariable(System.Collections.Generic.Dictionary{System.String,System.Object})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.MonkeySpeakPage.Start">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.MonkeySpeakPage.Start</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.MonkeySpeakPage.Start</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.Banish">
      <summary>
 Cause:s (0:50) - (0:62
 <para>
 Conditions: (1:50) - (1:53)
 </para>
 Effects: (5:49) - (5:56)
 <para>
 Banish Monkey Speak
 </para>
 This system mirrors Furcadia's banish system by tracking the banish
 commands sent to the game aerver and keep a list of banished furres
 locally. To help keep the list accurate, It is reconmended to ask
 the server for a banish list upon joining the dream. It maybe a good
 idea to run a daily schedule to refresh the list for temp banishes
 to drop off.
 </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Banish.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.Banish</parameter>
          </include>
        </markup>
      </summary>
      <param name="session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.Banish.#ctor(SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Banish.AndBanishFurreNamed(Monkeyspeak.TriggerReader)">
      <summary>
 (0:51) When the bot fails to banish the furre named {...}
 <para>
 (0:53) When the bot successfully banishes the furre named {...},
 </para><para>
 (0:56) When the bot fails to remove the furre named {...} from
 the banish list,
 </para><para>
 (0:58) When the bot successfully removes the furre named {...}
 from the banish list,
 </para><para>
 (0:62) When the bot successfully temp banishes the furre named {...},
 </para></summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True on Name Match
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Banish.BanishFurreNamed(Monkeyspeak.TriggerReader)">
      <summary>
 (5:52) banish the furre named {...}.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True on sending the banish command
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Banish.BanishList(Monkeyspeak.TriggerReader)">
      <summary>
 (5:50) ask the server for the banish-list.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True on sending the Server Command
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Banish.BanishSave(Monkeyspeak.TriggerReader)">
      <summary>
 (5:49) save the banish list to the variable % .
 <para>
 Reads the mirror banish list and stores is as a coma separated
 list in a <see cref="T:Monkeyspeak.Variable" /></para><para>
 It's a good idea to ask the server for the dreams banish list to
 keep this list current
 </para></summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Banish.BanishTrigFurre(Monkeyspeak.TriggerReader)">
      <summary>
 (5:51) banish the triggering furre.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on sending the server command
 </returns>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.Banish.FurcadiaSession">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.Banish.FurcadiaSession</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Banish.FurreNamedIsBanished(Monkeyspeak.TriggerReader)">
      <summary>
 (1:53) and the furre named {...} is on the banish list,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True if the furre is on the mirror banish list
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Banish.FurreNamedIsNotBanished(Monkeyspeak.TriggerReader)">
      <summary>
 (1:52) and the furre named {...} is not on the banish list,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true if the furre is not on the mirror banish list
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Banish.TempBanishFurreNamed(Monkeyspeak.TriggerReader)">
      <summary>
 (5:54) temporarily banish the furre named {...} for three days.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on sending the server command
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Banish.TempBanishTrigFurre(Monkeyspeak.TriggerReader)">
      <summary>
 (5:53) temporarily banish the triggering furre for three days.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on sending the server command
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Banish.TrigFurreIsBanished(Monkeyspeak.TriggerReader)">
      <summary>
 (1:51) and the triggering furre is on the banish list,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true is the triggering furre is on the mirror banish list
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Banish.TrigFurreIsNotBanished(Monkeyspeak.TriggerReader)">
      <summary>
 (1:50) and the triggering furre is not on the banish list,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true if the triggering furre is not on the mirror banish list
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Banish.UnBanishFurreNamed(Monkeyspeak.TriggerReader)">
      <summary>
 (5:56) unbanish the furre named {...}.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True on sending the server command
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Banish.UnBanishTrigFurre(Monkeyspeak.TriggerReader)">
      <summary>
 (5:55) unbanish the triggering furre.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on sending the server command
 </returns>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary">
      <summary>
 The base library in which all Silver Monkey's Monkey Speak Libraries
 are built on. This Library contains the commonly used functions for
 all the other libraries
 </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
 Default Constructor
 <para>
 References the main components cfrom <see cref="T:SilverMonkeyEngine.BotSession" /></para></summary>
      <param name="Session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.#ctor(SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
      <exception cref="T:System.ArgumentException">
 Thrown when Session is not provided
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.Add(Monkeyspeak.Trigger,Monkeyspeak.TriggerHandler,System.Int32,System.Boolean,System.String)">
      <summary>
 Registers a Trigger to the TriggerHandler with optional description
 </summary>
      <param name="trigger">
 MonkeySpeak Trigger catagory
 </param>
      <param name="handler">
 MonkeySpeak Handler
 </param>
      <param name="description">
 Optional Description
 <para>
 Inherited from Base
 </para></param>
      <param name="HasHelp">
 Is Help provided in the help file?
 </param>
      <param name="SkilLevel">
 Skill levels 1-5
 </param>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.Dream">
      <summary>
 Current Dream the Bot is in
 </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.FurcadiaSession">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.FurcadiaSession</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.FurcTime">
      <summary>
 Current Furcadia Standard Time (fst)
 </summary>
      <returns>
 Furcadia Time Object in Furcadia Standard Time (fst)
 </returns>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.MsEngine">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.MsEngine</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.msgContains(Monkeyspeak.TriggerReader)">
      <summary>
        <para>
 Comparisons are done with Fucadia Markup Stripped
 </para>
      </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True if the MESSAGE system variable contains the specified string
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.msgEndsWith(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.msgEndsWith(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true if the System MESSAGE varible ends with the specified string
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.msgIs(Monkeyspeak.TriggerReader)">
      <summary>
 the Main Message is Comparason function
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.msgIsNot(Monkeyspeak.TriggerReader)">
      <summary>
 Generic Message is Not Functions
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true if the last message seen is not the specified message
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.msgNotContain(Monkeyspeak.TriggerReader)">
      <summary>
 Generic Message does not contain text function
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true if the last message seen does not contain the specified text
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.msgNotEndsWith(Monkeyspeak.TriggerReader)">
      <summary>
 (1:14) and triggering furre's message doesn't end with {.},
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.msgNotEndsWith(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.msgNotStartsWith(Monkeyspeak.TriggerReader)">
      <summary>
 (1:12) and triggering furre's message doesn't start with {.},
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.msgNotStartsWith(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.msgStartsWith(Monkeyspeak.TriggerReader)">
      <summary>
 (1:11) and triggering furre's message starts with {.},
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.msgStartsWith(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.MsPage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.MsPage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.NameIs(Monkeyspeak.TriggerReader)">
      <summary>
 Generic base Furre named {...} is Triggering Furre
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True on Name match
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.NameIsNot(Monkeyspeak.TriggerReader)">
      <summary>
 Generic base Furre named {...} is not the Triggering Furre
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True on Name match
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.PageExecute(System.Int32[])">
      <summary>
 Execute array of Trigger cause integers from the Current
 monkeyspeak page
 </summary>
      <param name="TriggerIDs">
 MonkeySpeak Triggers
 </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.PageSetVariable(System.String,System.String)">
      <summary>
 Set Bot assigned moneky speak variables as Constant
 </summary>
      <param name="Name">
        <see cref="P:Monkeyspeak.Variable.Name" />
      </param>
      <param name="Value">
        <see cref="P:Monkeyspeak.Variable.Value" />
      </param>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.Player">
      <summary>
 Current Triggering Furre
 </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.ReadVariableOrNumber(Monkeyspeak.TriggerReader,System.Boolean)">
      <summary>
 Reads a Double or a MonkeySpeak Variable
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <param name="addIfNotExist">
 Add Variable to Variable Scope is it Does not exist,
 <para>
 Default Value is False
 </para></param>
      <returns>
        <see cref="T:System.Double" />
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.SendClientMessage(System.String@)">
      <summary>
 Send a raw instruction to the client
 </summary>
      <param name="message">
 Message sring
 </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MonkeySpeakLibrary.sendServer(System.String@)">
      <summary>
 Send Formated Text to Server
 </summary>
      <param name="message">
 Client to server instruction
 </param>
      <returns>
 True is the Server is Connected
 </returns>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.Movement">
      <summary>
        <para>
 Causes: (0:600) -
 </para>
        <para>
 Conditions: (1:600) - (1:631)
 </para>
        <para>
 Effects: (5:600) - (5:625)
 </para>
 Furcadia Movement MonkeySpeak
<para>
 Processing of Furre Triggers around the map, Interact with avatar
 settings such as thier map location, Type of Wings, Which avatar a
 given furre has.. The Avatar colors ect..
 </para><para>
 Note: A Furre object only contains a description after the bot sends a look command to the server.
 </para></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.Movement</parameter>
          </include>
        </markup>
      </summary>
      <param name="session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.Movement.#ctor(SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.BotLie(Monkeyspeak.TriggerReader)">
      <summary>
 (5:623) make the bot lay down
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on sucessess sending the command to the game server
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.BotMoveSequence(Monkeyspeak.TriggerReader)">
      <summary>
 (5:625) Move the bot in this sequence {..} (one, sw, three, se,
 seven, nw, nine, or ne)
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on sending the command to the server queue
 </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
 is thrown when the arguments supplied are invalid
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.BotSit(Monkeyspeak.TriggerReader)">
      <summary>
 (5:622) make the bot sit down
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on sending the commands to the game server
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.BotStand(Monkeyspeak.TriggerReader)">
      <summary>
 (5:624) make the bot stand up
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on sending the commands to the game server
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.DescContains(Monkeyspeak.TriggerReader)">
      <summary>
 (1:600) and triggering furre's description contains {..}
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the triggering-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FaceDirectionNumber(Monkeyspeak.TriggerReader)">
      <summary>
 (5:620) set <see cref="T:Monkeyspeak.Variable">%Variable</see> to
 the direction number the triggering furre is facing/ moved in.
 (seven = North-West, nine = North-East, three = South-East, one
 = South=West)
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True on Success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedColorsVar(Monkeyspeak.TriggerReader)">
      <summary>
 (5:608) set variable
 <see cref="T:Monkeyspeak.Variable">%Variable</see> to the furre
 named {..} colors, if they are in the dream.
 <para>
 For this line to work, the bot must look at the specified furre
 </para></summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True if the specified furre is in the dream
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedDescContains(Monkeyspeak.TriggerReader)">
      <summary>
 (1:602) and the furre named {..} description contains {..}
 description, if they are in the dream.
 <para>
 For this line to work, the bot must look at the specified furre
 </para></summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True on Success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the specified-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedDescVar(Monkeyspeak.TriggerReader)">
      <summary>
 (5:607) set variable
 <see cref="T:Monkeyspeak.Variable">%Variable</see> to the furred
 named {..} description, if they are in the dream.
 <para>
 For this line to work, the bot must look at the specified furre
 </para></summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True if the specified furre is in the dream
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the triggering-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedFaceDirectionNumber(Monkeyspeak.TriggerReader)">
      <summary>
 (5:621) set <see cref="T:Monkeyspeak.Variable">%Variable</see> to
 the direction number the furre names {..}, is facing/ moved in.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedFacingNE(Monkeyspeak.TriggerReader)">
      <summary>
 (1:628) and the furre named {..} is facing NE,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedFacingNW(Monkeyspeak.TriggerReader)">
      <summary>
 (1:629) and the furre named {..} is facing NW,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedFacingSE(Monkeyspeak.TriggerReader)">
      <summary>
 (1:630) and the furre named {..} is facing SE,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedFacingSW(Monkeyspeak.TriggerReader)">
      <summary>
 (1:631) and the furre named {..} is facing SW,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedFemale(Monkeyspeak.TriggerReader)">
      <summary>
 (1:609) and the furre named {..} is female,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the triggering-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedGenderVar(Monkeyspeak.TriggerReader)">
      <summary>
 (5:605) set variable %Variable to the furre named {..} gender if
 they are in the dream.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the triggering-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedLaying(Monkeyspeak.TriggerReader)">
      <summary>
 (1:627) and the furre named {..} is laying.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedMale(Monkeyspeak.TriggerReader)">
      <summary>
 (1:608) and the furre named {..} is male,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the triggering-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedMoveFrom(Monkeyspeak.TriggerReader)">
      <summary>
 (1:635) and the furre named {..} moved from (x,y),
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedMoveInto(Monkeyspeak.TriggerReader)">
      <summary>
 (1:901) and the furre named {..} moved into/is standing at (x,y),
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedMoveIntoDirection(Monkeyspeak.TriggerReader)">
      <summary>
 (1:637) and the furre named {..}, successfully moved in
 direction # (seven = North-West, nine = North-East, three =
 South-East, one = South=West)
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedNoWings(Monkeyspeak.TriggerReader)">
      <summary>
 (1:617) and the furre named {..} doesn't wings of type #
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedSetCordX(Monkeyspeak.TriggerReader)">
      <summary>
 (5:618) set variable %Variable to the X coordinate where the
 furre named {..} moved into/is at.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedSetCordY(Monkeyspeak.TriggerReader)">
      <summary>
 (5:619) set variable %Variable to the Y coordinate where the
 furre named {..} moved into/is at.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedSitting(Monkeyspeak.TriggerReader)">
      <summary>
 (1:626) and the furre named {..} is sitting.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedSpecies(Monkeyspeak.TriggerReader)">
      <summary>
 (1:613) and the furre named {..} is Species # (please
 <see href="https://cms.furcadia.com/creations/dreammaking/dragonspeak/dsparams" />
 for info)
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the triggering-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedSpeciesVar(Monkeyspeak.TriggerReader)">
      <summary>
 (5:606) set variable %Variable to the furre named {..} species,
 if they are in the dream.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the triggering-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedStanding(Monkeyspeak.TriggerReader)">
      <summary>
 (1:625) and the furre named {..} is standing.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedStoodStill(Monkeyspeak.TriggerReader)">
      <summary>
 (1:636) and the furre named {..} tried to move but stood still.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True if the Furres location doesn't change
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedUnSpecified(Monkeyspeak.TriggerReader)">
      <summary>
 (1:610) and the furre Named {..} is unspecified,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the triggering-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedWings(Monkeyspeak.TriggerReader)">
      <summary>
 (1:616) and the furre named {..} has wings of type #
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the triggering-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.FurreNamedWingsVar(Monkeyspeak.TriggerReader)">
      <summary>
 (5:610) set %Variable to the wings type the furre named {..} is wearing.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the triggering-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.MoveBot(Monkeyspeak.TriggerReader)">
      <summary>
 (5:613) move the bot in direction # one space. (seven =
 North-West, nine = North-East, three = South-East, one = South=West)
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when the directions don't match the correct format
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.MoveFrom(Monkeyspeak.TriggerReader)">
      <summary>
 (1:634) and the triggering furre moved from (x,y),
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.MoveInto(Monkeyspeak.TriggerReader)">
      <summary>
 0:901) when a furre moves into (x,y),
 <para>
 (1:900) and the triggering furre moved into/is standing at (x,y),
 </para></summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.MoveIntoDirection(Monkeyspeak.TriggerReader)">
      <summary>
 (1:636) and the triggering furre successfully moved in direction
 # (seven = North-West, nine = North-East, three = South-East,
 one = South=West)
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.NotDescContains(Monkeyspeak.TriggerReader)">
      <summary>
 (1:601) and triggering furre's description does not contain {..},
 <para>
 NOTE: This line only works after the bot has looked at the
       specified furre
 </para></summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the triggering-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.NotDescContainsFurreNamed(Monkeyspeak.TriggerReader)">
      <summary>
 (1:603) and the furre named {..} description does not contain {..}
 <para>
 NOTE: This line only works after the bot has looked at the
       specified furre
 </para></summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.Movement.NotDescContainsFurreNamed(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.SetCordX(Monkeyspeak.TriggerReader)">
      <summary>
 (5:616) set variable %Variable to the X coordinate where the
 triggering furre moved into/is at.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.SetCordY(Monkeyspeak.TriggerReader)">
      <summary>
 (5:617) set variable %Variable to the Y coordinate where the
 triggering furre moved into/is at.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.StoodStill(Monkeyspeak.TriggerReader)">
      <summary>
 (1:638) and the triggering furre tried to move but stood still.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.TriggeringFurreColorsVar(Monkeyspeak.TriggerReader)">
      <summary>
 (5:604) set variable %Variable to the triggering furre's colors.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.TriggeringFurreDescVar(Monkeyspeak.TriggerReader)">
      <summary>
 (5:600) set variable %Variable to the Triggering furre's description.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.TriggeringFurreFacingNE(Monkeyspeak.TriggerReader)">
      <summary>
 (1:621) and the triggering furre is facing NE,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.TriggeringFurreFacingNW(Monkeyspeak.TriggerReader)">
      <summary>
 (1:622) and the triggering furre is facing NW,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.TriggeringFurreFacingSE(Monkeyspeak.TriggerReader)">
      <summary>
 (1:623) and the triggering furre is facing SE,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.TriggeringFurreFacingSW(Monkeyspeak.TriggerReader)">
      <summary>
 (1:624) and the triggering furre is facing SW,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.TriggeringFurreFemale(Monkeyspeak.TriggerReader)">
      <summary>
 (1:605) and the triggering furre is female,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the triggering-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.TriggeringFurreGenderVar(Monkeyspeak.TriggerReader)">
      <summary>
 (5:601 set variable %Variable to the triggering furre's gender.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the triggering-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.TriggeringFurreLaying(Monkeyspeak.TriggerReader)">
      <summary>
 (1:x) and the triggering furre is laying.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.TriggeringFurreMale(Monkeyspeak.TriggerReader)">
      <summary>
 (1:604) and the triggering furre is male,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the triggering-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.TriggeringFurreNoWings(Monkeyspeak.TriggerReader)">
      <summary>
 (1:615) and the triggering furre doesn't wings of type #
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the triggering-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.TriggeringFurreSitting(Monkeyspeak.TriggerReader)">
      <summary>
 (1:x) and the triggering furre is sitting.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.TriggeringFurreSpecies(Monkeyspeak.TriggerReader)">
      <summary>
 (1:612) and the trigger furre is Species # (please
 <see href="https://cms.furcadia.com/creations/dreammaking/dragonspeak/dsparams" />
 for info)
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the triggering-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.TriggeringFurreSpeciesVar(Monkeyspeak.TriggerReader)">
      <summary>
 (5:602) set variable %Variable to the triggering furre's species.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the triggering-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.TriggeringFurreStanding(Monkeyspeak.TriggerReader)">
      <summary>
 (1:x) and the triggering furre is standing.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.Movement.TriggeringFurreStanding(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.TriggeringFurreUnspecified(Monkeyspeak.TriggerReader)">
      <summary>
 (1:606) and the triggering furre is unspecified,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the triggering-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.TriggeringFurreWings(Monkeyspeak.TriggerReader)">
      <summary>
 (1:614) and the triggering furre has wings of type #
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the triggering-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.TriggeringFurreWingsVar(Monkeyspeak.TriggerReader)">
      <summary>
 (5:609) set %Variable to the wings type the triggering furre is wearing.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when a Furre doesn't have a a description. This can be
 prevented by looking at the triggering-furre first
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.TurnCCW(Monkeyspeak.TriggerReader)">
      <summary>
 (5:615) turn the bot counter-clockwise one space.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Movement.TurnCW(Monkeyspeak.TriggerReader)">
      <summary>
 (5:614) turn the bot clock-wise one space.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MS_Cookie">
      <summary>
 Furcadia Cookie Interface
 <para><see href="http://furcadia.com/cookies/Cookie%20Economy.html" /></para><para><see href="http://www.furcadia.com/cookies/" /></para></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MS_Cookie.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.MS_Cookie</parameter>
          </include>
        </markup>
      </summary>
      <param name="Session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MS_Cookie.#ctor(SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MS_Cookie.EatCookie(Monkeyspeak.TriggerReader)">
      <summary>
 (5:45) set variable %Variable to the cookie message the bot received.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.MS_Cookie.FurcadiaSession">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.MS_Cookie.FurcadiaSession</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MS_Cookie.NameIs(Monkeyspeak.TriggerReader)">
      <summary>
 (0:43) When a furre named {...} gives a cookie to the bot,
 </summary>
      <param name="reader"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MS_Cookie.NameIs(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MS_DreamTransfer">
      <summary>
 Future support for Dream uploads
 <para>
 Currently not used
 </para></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MS_DreamTransfer.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.MS_DreamTransfer</parameter>
          </include>
        </markup>
      </summary>
      <param name="session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MS_DreamTransfer.#ctor(SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MS_Quotes">
      <summary>
 Intended as a Quote list manager
 <para>
 Currently not used
 </para></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MS_Quotes.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.MS_Quotes</parameter>
          </include>
        </markup>
      </summary>
      <param name="Session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MS_Quotes.#ctor(SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MS_Repq">
      <summary>
 Furcadia Popup Windows
 <para>
 TODO: Complete Class
 </para></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MS_Repq.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.MS_Repq</parameter>
          </include>
        </markup>
      </summary>
      <param name="Session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MS_Repq.#ctor(SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.MS_Repq.FurcadiaSession">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.MS_Repq.FurcadiaSession</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MsDatabase">
      <summary>
 SQLite Database Access... Create tables Store records ect. in Silver Monkey
 <para>
 To view and edit these tables manually Please look as Data Monkey
 </para><para>
 Conditions (1:500) (1:531)
 </para><para>
 Effects: (5:500) - (5:559)
 </para><pra> Bot Testers: Be aware this class needs to be tested any way
 possible! </pra><para>
 Default SQLite database file: <see cref="P:MonkeyCore.Paths.SilverMonkeyBotPath" />\SilverMonkey.db
 </para><para>
 NOTE: PhoenixSpeak Database is not SQL based like SQLite. Phoenix
       Speak resembles an XML style system
 </para></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
 Default constructor initilizing the Monkey Speak lines with
 reference to BotSession
 </summary>
      <param name="Session"></param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.AddColumn(Monkeyspeak.TriggerReader)">
      <summary>
 (5:513) add column {...} with type {...} to the Furre table.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.ColumnSum(Monkeyspeak.TriggerReader)">
      <summary>
 (5:423) take the sum of column{...} in table {...} and put it
 into variable %
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.DeleteFurreNamed(Monkeyspeak.TriggerReader)">
      <summary>
 (5:419) delete all Database info about the furre named {...}.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.DeleteTriggeringFurre(Monkeyspeak.TriggerReader)">
      <summary>
 (5:418) delete all Database info about the triggering furre.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.ExecuteQuery(Monkeyspeak.TriggerReader)">
      <summary>
 (5:551) execute query {...}.
 <para>
 Execute raw SQL commands on the database.
 </para><para>
 For SELECT statements <see cref="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.RetrieveQuery(Monkeyspeak.TriggerReader)" /></para></summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.FurreNamedinfoEqualToNumber(Monkeyspeak.TriggerReader)">
      <summary>
 (1:508) and the Database info {...} about the furre named {...}
 is equal to #,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True if there is no error, otherwise false and stops further
 conditions or effects processing in the currnt block
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.FurreNamedinfoEqualToSTR(Monkeyspeak.TriggerReader)">
      <summary>
 (1:516) and the Database info {...} about the furre named {...}
 is equal to string {...},
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.FurreNamedinfoGreaterThanNumber(Monkeyspeak.TriggerReader)">
      <summary>
 (1:510) and the Database info {...} about the furre named {...}
 is greater than #, greater than #,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.FurreNamedinfoGreaterThanOrEqualToNumber(Monkeyspeak.TriggerReader)">
      <summary>
 (1:512) and the Database info {...} about the furre named {...}
 is greater than or equal to #,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.FurreNamedinfoLessThanNumber(Monkeyspeak.TriggerReader)">
      <summary>
 (1:511) and the Database info {...} about the furre named {...}
 is less than #,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.FurreNamedinfoLessThanOrEqualToNumber(Monkeyspeak.TriggerReader)">
      <summary>
 (1:513) and the Database info {...} about the furre named {...}
 is less than or equal to #,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.FurreNamedinfoNotEqualToNumber(Monkeyspeak.TriggerReader)">
      <summary>
 (1:509) and the Database info {...} about the furre named {...}
 is not equal to #,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.FurreNamedinfoNotEqualToSTR(Monkeyspeak.TriggerReader)">
      <summary>
 (1:517) and the Database info {...} about the furre named {...}
 is not equal to string {...},
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.GetTotalRecords(Monkeyspeak.TriggerReader)">
      <summary>
 (5:422) get the total number of records from table {...} and put
 it into variable %.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.InsertFurreNamed(Monkeyspeak.TriggerReader)">
      <summary>
 (5:506) add furre named {%NewMember} with the default access
 level "1" to the Furre Table in the database if he, she, or it
 doesn't exist.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.insertTriggeringFurreRecord(Monkeyspeak.TriggerReader)">
      <summary>
 (5:405) Add the triggering furre with default access level to
 the Furre Table in the database if he, she or it don't already exist.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.PrepQuery(Monkeyspeak.TriggerReader)">
      <summary>
 (5:550) take variable %Variable , prepare it for a query, and
 put it in variable %Variable (this is your escaping call, which
 would depend on however you have to do it internally)
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.ReadDatabaseInfo(Monkeyspeak.TriggerReader)">
      <summary>
 (5:411) select Database info {...} about the triggering furre,
 and put it in variable %Variable.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.ReadDatabaseInfoName(Monkeyspeak.TriggerReader)">
      <summary>
 (5:412) select Database info {...} about the furre named {...},
 and put it in variable %Variable.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.RecordIndex(Monkeyspeak.TriggerReader)">
      <summary>
 (5:424) in table {...} take info {...} from record index % and
 and put it into variable %
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.RetrieveQuery(Monkeyspeak.TriggerReader)">
      <summary>
 (5:552) retrieve field {...} from query and put it into variable %Variable
 <para><see cref="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.ExecuteQuery(Monkeyspeak.TriggerReader)" /></para></summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.SettingEqualTo(Monkeyspeak.TriggerReader)">
      <summary>
 (1:526) and the Database info {..} in Settings Table {...} Is
 equal to {...},
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.SettingExist(Monkeyspeak.TriggerReader)">
      <summary>
 (1:524) and the Database info {...} in Settings Table {...} exists,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.SettingGreaterThan(Monkeyspeak.TriggerReader)">
      <summary>
 (1:528) and the Database info {..} in Settings Table {...} Is
 greater than #,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.SettingGreaterThanOrEqualTo(Monkeyspeak.TriggerReader)">
      <summary>
 (1:529) and the Database info {..} in Settings Table {...} Is
 greater than or equal to #,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.SettingLessThan(Monkeyspeak.TriggerReader)">
      <summary>
 (1:530) and the Database info {..} in Settings Table {...} Is
 less than #,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.SettingLessThanOrEqualTo(Monkeyspeak.TriggerReader)">
      <summary>
 (1:531) and the Database info {..} in Settings Table {...} Is
 less than or equal to #,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.SettingNotEqualTo(Monkeyspeak.TriggerReader)">
      <summary>
 (1:527) and the Database info {..} in Settings Table {...} Is
 not equal to {...},
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.SettingNotExist(Monkeyspeak.TriggerReader)">
      <summary>
 (1:525) and the Database info {...} in Settings Table {...}
 doesn't exist, doesn't exist,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.MsDatabase.SQLitefile">
      <summary>
 Currenly used database filfe
 </summary>
      <returns>
 SQLite database file with Silver Monkey system tables and user data
 </returns>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.MsDatabase.SQLreader">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:SilverMonkeyEngine.Engine.Libraries.MsDatabase.SQLreader</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.TriggeringFurreinfoEqualToNumber(Monkeyspeak.TriggerReader)">
      <summary>
 (1:500) and the Database info {...} about the triggering furre
 is equal to #,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.TriggeringFurreinfoEqualToSTR(Monkeyspeak.TriggerReader)">
      <summary>
 "(1:518) and the Database info {...} about the triggering furre
 is equal to string {...},
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.TriggeringFurreinfoGreaterThanNumber(Monkeyspeak.TriggerReader)">
      <summary>
 (1:502) and the Database info {...} about the triggering furre
 is greater than #,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.TriggeringFurreinfoGreaterThanOrEqualToNumber(Monkeyspeak.TriggerReader)">
      <summary>
 (1:504) and the Database info {...} about the triggering furre
 is greater than or equal to #,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.TriggeringFurreinfoLessThanNumber(Monkeyspeak.TriggerReader)">
      <summary>
 (1:503) and the Database info {...} about the triggering furre
 is less than #,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.TriggeringFurreinfoLessThanOrEqualToNumber(Monkeyspeak.TriggerReader)">
      <summary>
 (1:505) and the Database info {...} about the triggering furre
 is less than or equal to #,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.TriggeringFurreinfoNotEqualToNumber(Monkeyspeak.TriggerReader)">
      <summary>
 (1:501) and the Database info {...} about the triggering furre
 is not equal to #,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.TriggeringFurreinfoNotEqualToSTR(Monkeyspeak.TriggerReader)">
      <summary>
 (1:519) and the Database info {...} about the triggering furre
 is not equal to string {...},
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.UpdateFurreNamed_Field(Monkeyspeak.TriggerReader)">
      <summary>
 (5:408) update Database info {...} about the furre named {...}
 will now be #.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.UpdateFurreNamed_FieldSTR(Monkeyspeak.TriggerReader)">
      <summary>
 (5:410) update Database info {...} about the furre named {...}
 will now be {...}.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.UpdateTriggeringFurreField(Monkeyspeak.TriggerReader)">
      <summary>
 (5407) update Database info {...} about the triggering furre
 will now be #.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.UpdateTriggeringFurreFieldSTR(Monkeyspeak.TriggerReader)">
      <summary>
 (5:409) update Database info {...} about the triggering furre
 will now be {...}.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.UseOrCreateSQLiteFileIfNotExist(Monkeyspeak.TriggerReader)">
      <summary>
 (5:500) use SQLite database file {...} or create file if it does
 not exist.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDatabase.VACUUM(Monkeyspeak.TriggerReader)">
      <summary>
 (5:559) execute ""VACUUM"" to rebuild the database and reclaim
 wasted space.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MsDice">
      <summary>
 Cause: (0:130 - (0:136
 <para>
 Conditions: (1:130) - (1:131)
 </para><para>
 Effect: (5:130) - (5:139)
 </para><para>
 Furcadia Dice Role handler
 </para></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDice.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.MsDice</parameter>
          </include>
        </markup>
      </summary>
      <param name="session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsDice.#ctor(SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDice.DiceMinusNumber(Monkeyspeak.TriggerReader)">
      <summary>
 (5:313) set variable % to the total of rolling # dice with #
 sides minus #.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsDice.DiceMinusNumber(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDice.DicePlusNumber(Monkeyspeak.TriggerReader)">
      <summary>
 (5:312) set variable % to the total of rolling # dice with #
 sides plus #.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsDice.DicePlusNumber(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDice.DiceResultNumberOrHigher(Monkeyspeak.TriggerReader)">
      <summary>
 (1:130) and the dice roll result is # or higher,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsDice.DiceResultNumberOrHigher(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDice.DiceResultNumberOrlower(Monkeyspeak.TriggerReader)">
      <summary>
 (1:131) and the dice roll result is # or lower,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsDice.DiceResultNumberOrlower(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.MsDice.FurcadiaSession">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.MsDice.FurcadiaSession</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDice.RollDice(Monkeyspeak.TriggerReader)">
      <summary>
 (5:134) roll # furcadia dice with # sides.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsDice.RollDice(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDice.RollDiceMinus(Monkeyspeak.TriggerReader)">
      <summary>
 (5:136) roll # furcadia dice with # sides minus #.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsDice.RollDiceMinus(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDice.RollDicePlus(Monkeyspeak.TriggerReader)">
      <summary>
 (5:135) roll # furcadia dice with # sides plus #.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsDice.RollDicePlus(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDice.RollNumber(Monkeyspeak.TriggerReader)">
      <summary>
 (0:130) When the bot rolls #d# and gets # or highter,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsDice.RollNumber(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDice.RollNumberMinusModifyer(Monkeyspeak.TriggerReader)">
      <summary>
 (0:134) When the bot rolls #d# -# and gets # or highter,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsDice.RollNumberMinusModifyer(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDice.RollNumberPlusModifyer(Monkeyspeak.TriggerReader)">
      <summary>
 (0:132) When the bot rolls #d# +# and gets # or highter,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsDice.RollNumberPlusModifyer(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDice.TrigFurreRolledVariable(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsDice.TrigFurreRolledVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsDice.TrigFurreRolledVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MsDice.DiceRollCollection">
      <summary>
 Grab your dice and shake them till you're ready to roll
 </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDice.DiceRollCollection.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.MsDice.DiceRollCollection</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDice.DiceRollCollection.RollAll">
      <summary>
 Mix up the Dice in hand and roll them
 </summary>
      <returns>
 Sum of the result as <see cref="T:System.Double" /></returns>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MsDice.Die">
      <summary>
 Single Die object for Silver Monkey generating a Dice Roll
 </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDice.Die.#ctor(System.Double)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.MsDice.Die</parameter>
          </include>
        </markup>
      </summary>
      <param name="faceCount">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>faceCount</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsDice.Die.#ctor(System.Double)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.MsDice.Die.FaceCount">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.MsDice.Die.FaceCount</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsDice.Die.Roll">
      <summary>
 Roll a single die
 </summary>
      <returns>
        <see cref="T:System.Double" />
      </returns>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.MsDice.Die.Value">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.MsDice.Die.Value</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MsFurreList">
      <summary>
 Conditions (1:700) - (1:709)
 <para>
 Effects (5:700) - (5:703)
 </para><para>
 Furres in dream
 </para><para>
 AFK vs active players
 </para></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsFurreList.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.MsFurreList</parameter>
          </include>
        </markup>
      </summary>
      <param name="session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsFurreList.#ctor(SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsFurreList.FurreActiveListCount(Monkeyspeak.TriggerReader)">
      <summary>
 (5:702) count the number of active furres in the drean and put
 it in the variable %Variable.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 the Number of Furre in dream as a <see cref="T:Monkeyspeak.Variable" /></returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsFurreList.FurreAFKListCount(Monkeyspeak.TriggerReader)">
      <summary>
 (5:703) count the number of A.F.K furres in the drean and put it
 in the variable %Variable.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 the number of AFK furres in the Dream as a <see cref="T:Monkeyspeak.Variable" /><para>To be counted as AFK, Thier AFK time is greater than zero</para></returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsFurreList.FurreListCount(Monkeyspeak.TriggerReader)">
      <summary>
 (5:701) save the dream list count to variable %Variable.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 The total number of furres in a <see cref="T:Monkeyspeak.Variable" /></returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsFurreList.FurreListVar(Monkeyspeak.TriggerReader)">
      <summary>
 (5:700) Copy the dreams's furre-list to array %Variable
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 a comoa seperated list of Furre Names
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsFurreList.FurreNamedActive(Monkeyspeak.TriggerReader)">
      <summary>
 (1:709) and the furre named {...} is active in the dream,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True is the furre specified has afk time of 0
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsFurreList.FurreNamedAFK(Monkeyspeak.TriggerReader)">
      <summary>
 (1:708) and the furre named {...} is a.f.k.,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 returns true if the Furre has a afk time greater than zero
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsFurreList.FurreNamedCanSe(Monkeyspeak.TriggerReader)">
      <summary>
 (1:706) and the furre named {...} is visible.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True if the specified furre is visible
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsFurreList.FurreNamedInDream(Monkeyspeak.TriggerReader)">
      <summary>
 (1:702) and the furre named {...} is in the dream.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true if the furre specified is in the dream
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsFurreList.FurreNamedNotCanSe(Monkeyspeak.TriggerReader)">
      <summary>
 (1:707) and the furre named {...} is not visible
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 returns true if the spcified furre is not visible
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsFurreList.FurreNamedNotInDream(Monkeyspeak.TriggerReader)">
      <summary>
 (1:703) and the furre named {...} is not in the dream
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true if the specified furre is not in the dream
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsFurreList.TriggeringCanSe(Monkeyspeak.TriggerReader)">
      <summary>
 (1:704) and the triggering furre is visible.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true is the triggering furre is visible
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsFurreList.TriggeringInDream(Monkeyspeak.TriggerReader)">
      <summary>
 (1:700) and the triggering furre in the dream.
 <para>Consider Whisperibg furres</para></summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true if the triggering furre is in the dream
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsFurreList.TriggeringNotCanSe(Monkeyspeak.TriggerReader)">
      <summary>
 (1:705) and the triggering furre is not visible
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 returns true if the triggering furre is not visible
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsFurreList.TriggeringNotInDream(Monkeyspeak.TriggerReader)">
      <summary>
 (1:701) and the triggering furre is not in the dream.
 <para>considering a whispering furre</para></summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true if the triggering furre is not in the dream
 </returns>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MsIO">
      <summary>
 Create, Delete, Modify text files
 <para>
 Conditions (1:200) - (1:203)
 </para><para>
 Effects (5:200) - (5:125)
 </para></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsIO.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.MsIO</parameter>
          </include>
        </markup>
      </summary>
      <param name="Session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsIO.#ctor(SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsIO.CountLines(Monkeyspeak.TriggerReader)">
      <summary>
 (5:125) count the number of lines in text file {...} and put it
 into variable %Variable .
 </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsIO.CountLines(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsIO.CountLines(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsIO.ReadTextLine(Monkeyspeak.TriggerReader)">
      <summary>
 (5:124) read line number # from text file {...} and put it into
 variable %Variable.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True
 </returns>
      <exception cref="T:System.IO.FileNotFoundException"></exception>
      <exception cref="T:System.IndexOutOfRangeException"></exception>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MsMemberList">
      <summary>
 Dream Member List management
 <para>
 a Simple dream administration system using a text file to contain a
 list of Furre as staff
 </para><para>
 NOTE: The BotController is considered to be on the list even if the
       furres name is not in the text file
 </para><para>
 Default Member-List file: <see cref="P:MonkeyCore.Paths.SilverMonkeyBotPath" />\MemberList.txt
 </para></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsMemberList.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.MsMemberList</parameter>
          </include>
        </markup>
      </summary>
      <param name="Session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsMemberList.#ctor(SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak">
      <summary>
 Monkey Speak Interface to the
 <see href="https://cms.furcadia.com/creations/dreammaking/dragonspeak/psalpha">Phoenix
 Speak</see> server command line interface
 <para>
 Checks and executes predefined Phoenix Speak commands to manages a
 dreams database.
 </para><pra>Bot Testers: Be aware this class needs to be tested any way possible!</pra></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.#ctor(SilverMonkeyEngine.BotSession)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak</parameter>
          </include>
        </markup>
      </summary>
      <param name="session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.#ctor(SilverMonkeyEngine.BotSession)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.ForgetDreamPS(Monkeyspeak.TriggerReader)">
      <summary>
 (5:91) Forget Phoenix Speak info {...} for this dream.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.ForgetFurreNamedPS(Monkeyspeak.TriggerReader)">
      <summary>
 (5:83) Forget Phoenix Speak info {...} for the Furre Named {...}.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.ForgetTrigFurrePS(Monkeyspeak.TriggerReader)">
      <summary>
 (5:85) Forget Phoenix Speak info {...} for the Triggering Furre.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.FurcadiaSession">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.FurcadiaSession</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.getPSinfo(Monkeyspeak.TriggerReader)">
      <summary>
 (5:80) retrieve Phoenix Speak info {...} and place the value
 into variable %Variable.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.MemorizeDreamPS(Monkeyspeak.TriggerReader)">
      <summary>
 (5:90) Memorize Phoenix Speak info {...} for this dream.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.MemorizeFurreNamedPS(Monkeyspeak.TriggerReader)">
      <summary>
 (5:82) Memorize Phoenix Speak info {...} for the Furre Named {...}.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.MemorizeTrigFurrePS(Monkeyspeak.TriggerReader)">
      <summary>
 (5:84) Memorize Phoenix Speak info {...} for the Triggering Furre.
 <para></para></summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.msgContains(Monkeyspeak.TriggerReader)">
      <summary>
 (0:17) When someone whispers something with {...} in it,
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.msgIs(Monkeyspeak.TriggerReader)">
      <summary>
 (0:81) When the bot sees the Phoenix Speak response {...},
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.ProcessPage(System.String@)">
      <summary>
 returns number of Phoenix Speak pages remaining
 </summary>
      <param name="data"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.ProcessPage(System.String@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.PSCommand(Monkeyspeak.TriggerReader)">
      <summary>
 (5:94) execute Phoenix Speak command {...}.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.PSForgetDream(Monkeyspeak.TriggerReader)">
      <summary>
 (5:97) Forget ALL Phoenix Speak info for this dream.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.PSForgetFurreNamed(Monkeyspeak.TriggerReader)">
      <summary>
 (5:96) Forget ALL Phoenix Speak info for the furre named {...}.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.PSForgetTriggeringFurre(Monkeyspeak.TriggerReader)">
      <summary>
 (5:95) Forget ALL Phoenix Speak info for the triggering furre
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.PSInfoKeyToVariable(Monkeyspeak.TriggerReader)">
      <summary>
 (5:81) Store PSInfo Key Names to Variable %Variable.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.RemberPSInfoAllCharacters(Monkeyspeak.TriggerReader)">
      <summary>
 (5:63) get all list of all characters and put it into the PSInfo cache.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.RemberPSInfoAllDream(Monkeyspeak.TriggerReader)">
      <summary>
 (5:62) get All Phoenix Speak info for the dream and put it into
 the PSInfo Cache.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.RemberPSInforFurreNamed(Monkeyspeak.TriggerReader)">
      <summary>
 (5:61) get All Phoenix Speak info for the Furre Named {...} and
 put it into the PSInfo Cache.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.RemberPSInforTrigFurre(Monkeyspeak.TriggerReader)">
      <summary>
 (5:60) get All Phoenix Speak info for the triggering furre and
 put it into the PSInfo Cache.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.SmRegExOptions">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeak.SmRegExOptions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore">
      <summary>
 Backup and restore a dreams
 <see href="https://cms.furcadia.com/creations/dreammaking/dragonspeak/psalpha">Phoenix
 Speak</see> database to Silver Monkey's built in SQLite database
 system. Silver Monkey uses the Command Line interface to walk and
 backup or restore the database for the dream.
 <para>
 NOTE: PhoenixSpeak Database is not SQL based like SQLite. Phoenix
       Speak resembles an XML style system
 </para>
 ''' <pra>Bot Testers: Be aware this class needs to be tested any way possible!</pra></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore</parameter>
          </include>
        </markup>
      </summary>
      <param name="session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.#ctor(SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.AbortPS(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.AbortPS(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.AbortPS(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.AbortPS(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.BackupAllPS(Monkeyspeak.TriggerReader)">
      <summary>
 (5:553) Backup All Character phoenix speak for the dream
 </summary>
      <param name="reader"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.BackupAllPS(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.BackUpCharacterNamed(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.BackUpCharacterNamed(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.BackUpCharacterNamed(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.BackUpCharacterNamed(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.BackupSingleCharacterPS(Monkeyspeak.TriggerReader)">
      <summary>
 (5:554) backup Character named {...} phoenix speak.
 </summary>
      <param name="reader"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.BackupSingleCharacterPS(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.BotBackup(Monkeyspeak.TriggerReader)">
      <summary>
 (1:520) and the bot is not in the middle of a PS Backup Process
 </summary>
      <param name="reader"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.BotBackup(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.BotRestore(Monkeyspeak.TriggerReader)">
      <summary>
 (1:522) and the bot is not in the middle of a PS Restore Process
 </summary>
      <param name="reader"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.BotRestore(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.Build_PS_CMD(System.String@)">
      <summary>
 Build list of Phoenix speak commands for the game server
 Restores Phoenix Speak for one character at a time.
 </summary>
      <param name="str">
 Character Name
 </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.Build_PS_CMD(System.String@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.CharacterList">
      <summary>
 List of characters to back up
 <para>
 special character [DREAM] for information to host dream
 </para></summary>
      <returns></returns>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.CurrentPS_Stage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.CurrentPS_Stage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.NotBotBackup(Monkeyspeak.TriggerReader)">
      <summary>
 (1:521) and the bot is in the middle of a PS Backup Process
 </summary>
      <param name="reader"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.NotBotBackup(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.NotBotRestore(Monkeyspeak.TriggerReader)">
      <summary>
 '(1:523) and the bot is in the middle of a PS Restore Process
 </summary>
      <param name="reader"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.NotBotRestore(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.PruneCharacterBackup(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.PruneCharacterBackup(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.PruneCharacterBackup(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.PruneCharacterBackup(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.PrunePS(System.Double@)">
      <summary>
 Prunes Phoenix Speak Backup database
 </summary>
      <param name="NumDays"></param>
      <returns>
 Number of records removed
 </returns>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.PsProcess">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.PsProcess</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.RestoreCharacterPS(Monkeyspeak.TriggerReader)">
      <summary>
 (5:555) restore phoenix speak for character {...}
 </summary>
      <param name="reader"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.RestoreCharacterPS(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.RestorePS(System.Double)">
      <summary>
 Restores Phoenix Speak newer the specified amount a time
 <para>
 0 Days will restore all records
 </para></summary>
      <param name="days">
 Number of Days for new records
 </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.restorePS_DataOldrThanDays(Monkeyspeak.TriggerReader)">
      <summary>
 (5:557) remove Entries older then # days from phoenix speak
 Character backup.
 <para>
 (5:558) restore phoenix speak characters newer then # days.
 </para></summary>
      <param name="reader"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.restorePS_DataOldrThanDays(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.SQLreader">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.SQLreader</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.PsBackupStage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.PsBackupStage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.PsBackupStage.GetList">
      <summary>
 Read Multi Page responses for character list
 </summary>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.PsBackupStage.GetAlphaNumericList">
      <summary>
 Read Character list one letter at a time
 <para>
 Picks up where Get List left Off
 </para></summary>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.PsBackupStage.GetTargets">
      <summary></summary>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.PsBackupStage.GetSingle">
      <summary></summary>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.PsBackupStage.RestoreSibgleCharacterPs">
      <summary></summary>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.PsBackupStage.RestoreAllCharacterPS">
      <summary></summary>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.PsBackupStage.PruneDatabase">
      <summary>
 Pruning Database
 </summary>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MsPhoenixSpeakBackupAndRestore.PsSystemRunning">
      <summary>
 PS systems running
 </summary>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MsPounce">
      <summary>
 Pounce Server interface with a list of furres contained in a simple
 text file. This system is styled after <see cref="T:SilverMonkeyEngine.Engine.Libraries.MsMemberList" /></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPounce.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
 Default Constructor
 </summary>
      <param name="Session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPounce.#ctor(SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPounce.FurreNamedNotOnline(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPounce.FurreNamedNotOnline(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPounce.FurreNamedNotOnline(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPounce.FurreNamedNotOnline(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPounce.FurreNamedOnline(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPounce.FurreNamedOnline(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPounce.FurreNamedOnline(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsPounce.FurreNamedOnline(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsPounce.NameIs(Monkeyspeak.TriggerReader)">
      <summary>
 (0:953) When the furre named {...} logs off,
 <para>
 (0:952) When the furre named {...} logs on,
 </para></summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 true on success
 </returns>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.MsPounce.OnlineListFile">
      <summary>
 the File of the Friends List to Check
 </summary>
      <returns></returns>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MsSound">
      <summary>
 Effects: (5:2010) - (5:2012)
 <para>
 Simple way to play wave files
 </para><para>
 Default wave folder: <see cref="P:MonkeyCore.Paths.SilverMonkeyBotPath" /></para></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsSound.#ctor(SilverMonkeyEngine.BotSession)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.MsSound</parameter>
          </include>
        </markup>
      </summary>
      <param name="Session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsSound.#ctor(SilverMonkeyEngine.BotSession)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsSound.StopSound(Monkeyspeak.TriggerReader)">
      <summary>
 (5:2012) stop playing the sound file.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True on Success
 </returns>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MsTime">
      <summary>
 Causes and effects to work with time and date material. Use this
 Monkey Speak to launch a Phoenix Speak back up operation, to track
 the date a furre was last seen in the dream,
 <para>
 Cause (0:299)
 </para><para>
 Effects: (5:30) - (5:35)
 </para></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsTime.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.MsTime</parameter>
          </include>
        </markup>
      </summary>
      <param name="Session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsTime.#ctor(SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsTime.CurrentTime(Monkeyspeak.TriggerReader)">
      <summary>
 (5:30) set variable %Variable to the current local time.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsTime.FurcDateTimeVar(Monkeyspeak.TriggerReader)">
      <summary>
 (5:33) set variable %Variable to current Furcadia DateTime.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsTime.LocalDateTimeVar(Monkeyspeak.TriggerReader)">
      <summary>
 (5:32) set variable %Variable to current local DateTime.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsTime.MsFurcTime(Monkeyspeak.TriggerReader)">
      <summary>
 (5:31) set variable %Variable to the current Furcadia Standard time.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsTime.SubsractDateTimeStr(Monkeyspeak.TriggerReader)">
      <summary>
 (5:34) use variable %Variable as a DateTime string and subtract
 Date Time string {...} and put it into variable %Variable.
 </summary>
      <param name="reader">
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True
 </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException">
 Thrown when DateTimeVariable and DateTimeString are not in the
 correct format
 </exception>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsTime.SubsractDateTimeVar(Monkeyspeak.TriggerReader)">
      <summary>
 (5:35) use variable %Variable as a DateTime string and subtract
 Date Time variable %Variable and put it into variable %Variable.
 </summary>
      <param name="reader">
        <exception cref="T:Monkeyspeak.MonkeyspeakException">Thrown when
 DateTimeVariable and DateTimeString are not in the correct format</exception>
        <see cref="T:Monkeyspeak.TriggerReader" />
      </param>
      <returns>
 True
 </returns>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MsTrades">
      <summary>
 Monkey Speak for Furcadia's in-game trade system
 <para>
 DEP recommends this system for trading digos and things
 </para></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsTrades.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
 default constructor to link with server events
 </summary>
      <param name="session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsTrades.#ctor(SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.MsTrades.FurcadiaSession">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.MsTrades.FurcadiaSession</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsTrades.msgContains(Monkeyspeak.TriggerReader)">
      <summary>
 (0:48) When the bot sees a trade request with {..} in it,
 </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsTrades.msgContains(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsTrades.msgContains(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsTrades.msgIs(Monkeyspeak.TriggerReader)">
      <summary>
 (0:47) When the bot sees the trade request {..},
 </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsTrades.msgIs(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsTrades.msgIs(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MsVerbot">
      <summary>
 Chatter Bot interface using the Verbot SDK
 </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsVerbot.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.MsVerbot</parameter>
          </include>
        </markup>
      </summary>
      <param name="Session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsVerbot.#ctor(SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.MsVerbot._state">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:SilverMonkeyEngine.Engine.Libraries.MsVerbot._state</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsVerbot.ChatExecute(Monkeyspeak.TriggerReader)">
      <summary>
 (0:1500) When the chat engine executes command {...},
 </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsVerbot.ChatExecute(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsVerbot.ChatExecute(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsVerbot.getReply(Monkeyspeak.TriggerReader)">
      <summary>
 (5:1501) send text {...} to chat engine and put the response in
 variable %Variable
 </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsVerbot.getReply(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsVerbot.getReply(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsVerbot.getReplyName(Monkeyspeak.TriggerReader)">
      <summary>
 (5:1502) send text {...} and Name {...} to chat engine and put
 the response in variable %Variable
 </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsVerbot.getReplyName(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsVerbot.getReplyName(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsVerbot.getStateVariable(Monkeyspeak.TriggerReader)">
      <summary>
 (5:1504) Get chat engine _state variable {...} and put it into
 variable %Variable.
 </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsVerbot.getStateVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsVerbot.getStateVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.MsVerbot.kb">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:SilverMonkeyEngine.Engine.Libraries.MsVerbot.kb</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.MsVerbot.kbi">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:SilverMonkeyEngine.Engine.Libraries.MsVerbot.kbi</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsVerbot.setStateVariable(Monkeyspeak.TriggerReader)">
      <summary>
 (5:1503) Set Chat Engine State Vairable {...} to {...}.
 </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsVerbot.setStateVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsVerbot.setStateVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsVerbot.useKB_File(Monkeyspeak.TriggerReader)">
      <summary>
 (5:1500) use knowledgbase file {...} (*.vkb) and start the chat engine.
 </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsVerbot.useKB_File(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsVerbot.useKB_File(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.MsVerbot.verbot">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:SilverMonkeyEngine.Engine.Libraries.MsVerbot.verbot</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MsWarning">
      <summary>
 General waring messages (Warning Channel?) Furcadia sends.
 </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsWarning.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.MsWarning</parameter>
          </include>
        </markup>
      </summary>
      <param name="session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsWarning.#ctor(SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsWarning.CommandNotWariningOrError(Monkeyspeak.TriggerReader)">
      <summary>
 (1:801) and the last command sent didn't return an error or
 warning # (zero = none, one = warning, two = error)
 </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsWarning.CommandNotWariningOrError(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsWarning.CommandNotWariningOrError(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsWarning.CommandWariningOrError(Monkeyspeak.TriggerReader)">
      <summary>
 (1:800) and the last command sent returned an error or warning #
 (zero = none, one = warning, two = error)
 </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsWarning.CommandWariningOrError(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsWarning.CommandWariningOrError(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsWarning.ErrorIs(Monkeyspeak.TriggerReader)">
      <summary>
 (0:800) When the bot sees error message {...},
 <para>
 0:801) when the bot sees warning message{...},
 </para></summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsWarning.ErrorIs(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsWarning.ErrorIs(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsWarning.WarningVar(Monkeyspeak.TriggerReader)">
      <summary>
 (5:800) set %Variable to the value of the message returned by
 the last command line. (zero = none, one = warning, two = error)
 </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsWarning.WarningVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsWarning.WarningVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.MsWebRequests">
      <summary>
 Provide web interface for getting a list of Variables from a web server
 <para>
 Effects: (5:10) - (5:60)
 </para></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.MsWebRequests.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.MsWebRequests</parameter>
          </include>
        </markup>
      </summary>
      <param name="session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.MsWebRequests.#ctor(SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.WebException">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:SilverMonkeyEngine.Engine.Libraries.WebException</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.WebException.#ctor(System.String)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.WebException</parameter>
          </include>
        </markup>
      </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WebException.#ctor(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.WebRequests">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:SilverMonkeyEngine.Engine.Libraries.WebRequests</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.WebRequests.#ctor(System.String@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.WebRequests</parameter>
          </include>
        </markup>
      </summary>
      <param name="URL">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>URL</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WebRequests.#ctor(System.String@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.WebRequests.add(System.String,System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WebRequests.add(System.String,System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="Key">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Key</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WebRequests.add(System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="Value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Value</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WebRequests.add(System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.WebRequests.PackURLEncod">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WebRequests.PackURLEncod</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WebRequests.PackURLEncod</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.WebRequests.WGet(System.Collections.Generic.Dictionary{System.String,System.String}@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WebRequests.WGet(System.Collections.Generic.Dictionary{System.String,System.String}@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="array">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>array</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WebRequests.WGet(System.Collections.Generic.Dictionary{System.String,System.String}@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WebRequests.WGet(System.Collections.Generic.Dictionary{System.String,System.String}@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.WebRequests.WPost(System.Collections.Generic.Dictionary{System.String,System.String}@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WebRequests.WPost(System.Collections.Generic.Dictionary{System.String,System.String}@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="array">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>array</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WebRequests.WPost(System.Collections.Generic.Dictionary{System.String,System.String}@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WebRequests.WPost(System.Collections.Generic.Dictionary{System.String,System.String}@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.WebRequests.WebData">
      <summary>
 Variable List
 </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.WebRequests.WebData.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.WebRequests.WebData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.WebRequests.WebData.ErrMsg">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:SilverMonkeyEngine.Engine.Libraries.WebRequests.WebData.ErrMsg</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.WebRequests.WebData.Packet">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:SilverMonkeyEngine.Engine.Libraries.WebRequests.WebData.Packet</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.WebRequests.WebData.ReceivedPage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.WebRequests.WebData.ReceivedPage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.WebRequests.WebData.Status">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.WebRequests.WebData.Status</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.WebRequests.WebData.WebStack">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:SilverMonkeyEngine.Engine.Libraries.WebRequests.WebData.WebStack</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.WmCpyDta">
      <summary>
 Bot to Bot Messaging using Window Calls
 </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.WmCpyDta.#ctor(SilverMonkeyEngine.BotSession@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.WmCpyDta</parameter>
          </include>
        </markup>
      </summary>
      <param name="session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>session</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WmCpyDta.#ctor(SilverMonkeyEngine.BotSession@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.WmCpyDta.ReceiveMessage(Monkeyspeak.TriggerReader)">
      <summary>
 (0:76) When the bot receives message {...} from another bot on
 the same computer,
 </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WmCpyDta.ReceiveMessage(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WmCpyDta.ReceiveMessage(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.WmCpyDta.ReceiveMessageContaining(Monkeyspeak.TriggerReader)">
      <summary>
 (0:77) When the bot receives a message containing {...} from
 another bot on the same computer,
 </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WmCpyDta.ReceiveMessageContaining(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WmCpyDta.ReceiveMessageContaining(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.WmCpyDta.SendMessage(Monkeyspeak.TriggerReader)">
      <summary>
 (5:75) send message {...} to bot named {...}.
 <para>
 Currently Disabled
 </para></summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WmCpyDta.SendMessage(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WmCpyDta.SendMessage(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.WmCpyDta.SetVariable(Monkeyspeak.TriggerReader)">
      <summary>
 (5:76) set Variable %Variable to the Message the bot last received.
 </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WmCpyDta.SetVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.WmCpyDta.SetVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenicSpeakDataObject">
      <summary>
 Store a Phoenix Speak 'Get' response and send it to the MonkeySpeak
 Library for PhonixSpeak Processing.
 <para>
 MonkeySpeak library grabs the PS Page and transforms it into a
 PsInfo object. A PsInfo object is a list of PhoenixSpeak Variables
 retrieved from the Furcadia Game-Server via the command line
 interface.
 <see href="https://cms.furcadia.com/creations/dreammaking/dragonspeak/psalpha">Phoenix Speak</see></para></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenicSpeakDataObject.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenicSpeakDataObject</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenicSpeakDataObject.#ctor(System.String@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenicSpeakDataObject</parameter>
          </include>
        </markup>
      </summary>
      <param name="data">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>data</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenicSpeakDataObject.#ctor(System.String@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenicSpeakDataObject.CurrentPage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenicSpeakDataObject.CurrentPage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenicSpeakDataObject.MultiPage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenicSpeakDataObject.MultiPage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenicSpeakDataObject.PagesRemaining">
      <summary>
 returns number of Phoenix Speak pages remaining
 </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenicSpeakDataObject.PhoenixSpeakID">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenicSpeakDataObject.PhoenixSpeakID</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenicSpeakDataObject.PS_Page">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenicSpeakDataObject.PS_Page</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenixSpeakEventArgs">
      <summary>
 Phoenix mSpeak Even Arguments
 <see href="https://cms.furcadia.com/creations/dreammaking/dragonspeak/psalpha">Phoenix Speak</see></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenixSpeakEventArgs.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenixSpeakEventArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenixSpeakEventArgs.Flag">
      <summary>
 Phoenix Speak Flag
 </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenixSpeakEventArgs.id">
      <summary>
 PhoenixSpeak id for cerver/client instructions
 </summary>
      <returns></returns>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenixSpeakEventArgs.PageOverFlow">
      <summary>
 Do we have too much Phoienix-Speak Data then the Server can send
 to us?
 </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenixSpeakEventArgs.PsType">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PhoenixSpeakEventArgs.PsType</parameter>
          </include>
        </markup>
      </summary>
      <returns></returns>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PsId">
      <summary>
 Phoenix Speak ID manager
<see href="https://cms.furcadia.com/creations/dreammaking/dragonspeak/psalpha">Phoenix Speak</see></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PsId.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PsId</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PsId.#ctor(System.Int16@)">
      <summary>
 Creates a New PHoenix Speak ID
 <para>
 If the ID exists, Its Number of uses increases by one
 </para></summary>
      <param name="NewId"></param>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PsId.Count">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PsId.Count</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PsId.HasId(System.Int16)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PsId.HasId(System.Int16)</parameter>
          </include>
        </markup>
      </summary>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PsId.HasId(System.Int16)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PsId.HasId(System.Int16)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PsId.Id">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PsId.Id</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.PsId.remove(System.Int16)">
      <summary>
 Removes the specified Phoenix Speak ID
 </summary>
      <param name="id"></param>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem">
      <summary>
 Phoenix Speak processing system
 <para>
 Purpose, to Parse Phoenix Speak responses from the game server
 </para><para>
 and store the Phoenix Speak Variables in some sort of a list
 <see href="https://cms.furcadia.com/creations/dreammaking/dragonspeak/psalpha">Phoenix Speak</see></para></summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.#ctor(SilverMonkeyEngine.BotSession)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem</parameter>
          </include>
        </markup>
      </summary>
      <param name="FurcSession">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>FurcSession</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.#ctor(SilverMonkeyEngine.BotSession)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.Abort">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.Abort</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="E:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.ChannelParsed">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>E:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.ChannelParsed</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.ClientMessage(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.ClientMessage(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="msg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>msg</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.ClientMessage(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.ParseServerChannel(System.String,System.Boolean@)">
      <summary>
 process Phoenix Speak data coming from the game server Reg-ex
 capture of server responses Execute Monkey Speak Engine
 processing (Triggers setting Monkey Speak Variables) Always
 clear PSInfoCache unless its a Multi-Page response
 </summary>
      <param name="ServerData">
 Server Data as string
 </param>
      <param name="Handled">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Handled</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.ParseServerChannel(System.String,System.Boolean@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.sendToServer(System.String@)">
      <summary>
 Send the Phoenix Commands to the Server queue
 </summary>
      <param name="var"></param>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.SubSystemPsID">
      <summary>
 16 bit integer Game server ID for the Current Executing Phoenix
 Speak Instruction set.
 </summary>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.ParseChannel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.ParseChannel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.PsFlag">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.PsFlag</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.PsFlag.PsUnknown">
      <summary>
 Unknown Phoenix Speak response
 </summary>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.PsFlag.PsError">
      <summary>
 Phoenix Speak Error
 </summary>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.PsFlag.PsGet">
      <summary>
 Get Phoenix Speak data from server
 </summary>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.PsFlag.PsSet">
      <summary>
 Send Phoenix Speak data to server.
 </summary>
    </member>
    <member name="F:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.SubSystem.PsFlag.PsOk">
      <summary></summary>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.TypeNotSupportedException">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.TypeNotSupportedException</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.TypeNotSupportedException.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.TypeNotSupportedException</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.TypeNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.TypeNotSupportedException</parameter>
          </include>
        </markup>
      </summary>
      <param name="info">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>info</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.TypeNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</parameter>
          </include>
        </markup>
      </param>
      <param name="context">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>context</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.TypeNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.TypeNotSupportedException.#ctor(System.String)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.TypeNotSupportedException</parameter>
          </include>
        </markup>
      </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.TypeNotSupportedException.#ctor(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.TypeNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.TypeNotSupportedException</parameter>
          </include>
        </markup>
      </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.TypeNotSupportedException.#ctor(System.String,System.Exception)</parameter>
          </include>
        </markup>
      </param>
      <param name="innerException">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>innerException</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.TypeNotSupportedException.#ctor(System.String,System.Exception)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.#ctor(SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable</parameter>
          </include>
        </markup>
      </summary>
      <param name="Var">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Var</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.#ctor(SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.#ctor(System.String,System.Object)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable</parameter>
          </include>
        </markup>
      </summary>
      <param name="Name">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Name</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.#ctor(System.String,System.Object)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.#ctor(System.String,System.Object)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.Equals(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.Equals(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="obj">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.Equals(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.Equals(System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.GetHashCode">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.GetHashCode</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.GetHashCode</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.Name">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.Name</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.op_Equality(SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable,SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.op_Equality(SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable,SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable)</parameter>
          </include>
        </markup>
      </summary>
      <param name="varA">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>varA</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.op_Equality(SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable,SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable)</parameter>
          </include>
        </markup>
      </param>
      <param name="varB">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>varB</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.op_Equality(SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable,SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.op_Equality(SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable,SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.op_Inequality(SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable,SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.op_Inequality(SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable,SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable)</parameter>
          </include>
        </markup>
      </summary>
      <param name="varA">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>varA</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.op_Inequality(SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable,SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable)</parameter>
          </include>
        </markup>
      </param>
      <param name="varB">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>varB</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.op_Inequality(SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable,SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.op_Inequality(SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable,SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.ToString">
      <summary>
 Returns a const identifier if the variable is constant followed by name,
 <para>otherwise just the name is returned.</para></summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.Value">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.PhoenixSpeak.Variable.Value</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre.#ctor(System.String)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre</parameter>
          </include>
        </markup>
      </summary>
      <param name="Furre">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Furre</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre.#ctor(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre.Equals(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre.Equals(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="other">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre.Equals(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre.Equals(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="E:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre.FurreLoggedOff">
      <summary>
 Furre logged off the Game server
 </summary>
      <param name="Furre">
 PounceFurre Object
 </param>
      <param name="e">
 Event Arguments.Empty
 </param>
    </member>
    <member name="E:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre.FurreLoggedOn">
      <summary>
 Furre Logged onto the Gameserver
 </summary>
      <param name="Furre">
 PounceFurre Object
 </param>
      <param name="e">
 Event Arguments.Empty
 </param>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre.Name">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre.Name</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre.Online">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre.Online</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre.ShortName">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre.ShortName</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre.FurreLoggedOffEventHandler">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre.FurreLoggedOffEventHandler</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre.FurreLoggedOnEventHandler">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:SilverMonkeyEngine.Engine.Libraries.Pounce.PounceFurre.FurreLoggedOnEventHandler</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:SilverMonkeyEngine.Interfaces.ImsHost">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:SilverMonkeyEngine.Interfaces.ImsHost</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Interfaces.ImsHost.BotName">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Interfaces.ImsHost.BotName</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Interfaces.ImsHost.Data">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Interfaces.ImsHost.Data</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Interfaces.ImsHost.Dream">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Interfaces.ImsHost.Dream</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Interfaces.ImsHost.logError(System.Exception@,System.Object@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.ImsHost.logError(System.Exception@,System.Object@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="Ex">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Ex</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.ImsHost.logError(System.Exception@,System.Object@)</parameter>
          </include>
        </markup>
      </param>
      <param name="ObjectThrowingError">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ObjectThrowingError</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.ImsHost.logError(System.Exception@,System.Object@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:SilverMonkeyEngine.Interfaces.ImsHost.MsPage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Interfaces.ImsHost.MsPage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Interfaces.ImsHost.Player">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Interfaces.ImsHost.Player</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Interfaces.ImsHost.SendClientMessage(System.String,System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.ImsHost.SendClientMessage(System.String,System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="msg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>msg</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.ImsHost.SendClientMessage(System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="data">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>data</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.ImsHost.SendClientMessage(System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Interfaces.ImsHost.sendServer(System.String@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.ImsHost.sendServer(System.String@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="var">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>var</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.ImsHost.sendServer(System.String@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Interfaces.ImsHost.start(SilverMonkeyEngine.Engine.MonkeySpeakPage@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.ImsHost.start(SilverMonkeyEngine.Engine.MonkeySpeakPage@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="page">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>page</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.ImsHost.start(SilverMonkeyEngine.Engine.MonkeySpeakPage@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:SilverMonkeyEngine.Interfaces.ImsPlugin">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:SilverMonkeyEngine.Interfaces.ImsPlugin</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Interfaces.ImsPlugin.Description">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Interfaces.ImsPlugin.Description</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Interfaces.ImsPlugin.enabled">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Interfaces.ImsPlugin.enabled</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Interfaces.ImsPlugin.Initialize(SilverMonkeyEngine.Interfaces.ImsHost)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.ImsPlugin.Initialize(SilverMonkeyEngine.Interfaces.ImsHost)</parameter>
          </include>
        </markup>
      </summary>
      <param name="Host">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Host</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.ImsPlugin.Initialize(SilverMonkeyEngine.Interfaces.ImsHost)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Interfaces.ImsPlugin.MessagePump(System.String@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.ImsPlugin.MessagePump(System.String@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="ServerInstruction">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ServerInstruction</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.ImsPlugin.MessagePump(System.String@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.ImsPlugin.MessagePump(System.String@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:SilverMonkeyEngine.Interfaces.ImsPlugin.MsPage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Interfaces.ImsPlugin.MsPage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Interfaces.ImsPlugin.Name">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Interfaces.ImsPlugin.Name</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Interfaces.ImsPlugin.Start">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.ImsPlugin.Start</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Interfaces.ImsPlugin.Version">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Interfaces.ImsPlugin.Version</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:SilverMonkeyEngine.Interfaces.msPlugin">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:SilverMonkeyEngine.Interfaces.msPlugin</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Interfaces.msPlugin.Description">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Interfaces.msPlugin.Description</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Interfaces.msPlugin.enabled">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Interfaces.msPlugin.enabled</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Interfaces.msPlugin.Initialize(SilverMonkeyEngine.Interfaces.ImsHost)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.msPlugin.Initialize(SilverMonkeyEngine.Interfaces.ImsHost)</parameter>
          </include>
        </markup>
      </summary>
      <param name="Host">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Host</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.msPlugin.Initialize(SilverMonkeyEngine.Interfaces.ImsHost)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Interfaces.msPlugin.MessagePump(System.String@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.msPlugin.MessagePump(System.String@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="ServerInstruction">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ServerInstruction</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.msPlugin.MessagePump(System.String@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.msPlugin.MessagePump(System.String@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:SilverMonkeyEngine.Interfaces.msPlugin.MsPage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Interfaces.msPlugin.MsPage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Interfaces.msPlugin.Name">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Interfaces.msPlugin.Name</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Interfaces.msPlugin.Start">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.msPlugin.Start</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Interfaces.msPlugin.Version">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Interfaces.msPlugin.Version</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:SilverMonkeyEngine.Interfaces.smHost">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:SilverMonkeyEngine.Interfaces.smHost</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Interfaces.smHost.#ctor(SilverMonkeyEngine.BotSession)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>SilverMonkeyEngine.Interfaces.smHost</parameter>
          </include>
        </markup>
      </summary>
      <param name="Session">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Session</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.smHost.#ctor(SilverMonkeyEngine.BotSession)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:SilverMonkeyEngine.Interfaces.smHost.BotName">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Interfaces.smHost.BotName</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Interfaces.smHost.data">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Interfaces.smHost.data</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Interfaces.smHost.Dream">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Interfaces.smHost.Dream</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Interfaces.smHost.logError(System.Exception@,System.Object@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.smHost.logError(System.Exception@,System.Object@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="Ex">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Ex</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.smHost.logError(System.Exception@,System.Object@)</parameter>
          </include>
        </markup>
      </param>
      <param name="ObjectThrowingError">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ObjectThrowingError</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.smHost.logError(System.Exception@,System.Object@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:SilverMonkeyEngine.Interfaces.smHost.MsPage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Interfaces.smHost.MsPage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:SilverMonkeyEngine.Interfaces.smHost.Player">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:SilverMonkeyEngine.Interfaces.smHost.Player</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:SilverMonkeyEngine.Interfaces.smHost.SendClientMessage(System.String,System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.smHost.SendClientMessage(System.String,System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="Tag">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Tag</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.smHost.SendClientMessage(System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="data">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>data</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.smHost.SendClientMessage(System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Interfaces.smHost.sendServer(System.String@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.smHost.sendServer(System.String@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="var">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>var</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.smHost.sendServer(System.String@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.Interfaces.smHost.Start(SilverMonkeyEngine.Engine.MonkeySpeakPage@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.smHost.Start(SilverMonkeyEngine.Engine.MonkeySpeakPage@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="page">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>page</parameter>
            <parameter>M:SilverMonkeyEngine.Interfaces.smHost.Start(SilverMonkeyEngine.Engine.MonkeySpeakPage@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:SilverMonkeyEngine.IO.NameList">
      <summary>
 Class to read and write a list of names to a text file
 <para>
 Names are stored one name per live.
 </para><para>
 List is Smart enough to work with FurcadiaShortName format
 </para></summary>
    </member>
    <member name="M:SilverMonkeyEngine.IO.NameList.#ctor">
      <summary>
 Default constructor
 </summary>
    </member>
    <member name="M:SilverMonkeyEngine.IO.NameList.#ctor(System.String)">
      <summary>
 Starts a new instance with a filename
 </summary>
      <param name="ListFile">
 Filename
 </param>
    </member>
    <member name="M:SilverMonkeyEngine.IO.NameList.Add(System.String)">
      <summary>
 adds name to the list if it does not exist
 </summary>
      <param name="Furre">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Furre</parameter>
            <parameter>M:SilverMonkeyEngine.IO.NameList.Add(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:SilverMonkeyEngine.IO.NameList.Clear">
      <summary>
 Clears the Name List.
 </summary>
    </member>
    <member name="M:SilverMonkeyEngine.IO.NameList.Contains(System.String)">
      <summary>
 Does the list contain a specified name?
 </summary>
      <param name="Furre">
 Furre Name
 </param>
      <returns>
 True if it does.
 </returns>
    </member>
    <member name="P:SilverMonkeyEngine.IO.NameList.Count">
      <summary>
 Total number of names in the list
 </summary>
      <returns></returns>
    </member>
    <member name="P:SilverMonkeyEngine.IO.NameList.HaseChanged">
      <summary>
 Has the namelist changed?
 </summary>
      <returns>
 true if NameList has Changed
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.IO.NameList.ReadList(System.String)">
      <summary>
 Reads list of names from the text file
 </summary>
      <param name="ListFile">
 Text file containing the names (one name per line)
 </param>
    </member>
    <member name="M:SilverMonkeyEngine.IO.NameList.Remove(System.String)">
      <summary>
 Removes a Name from the List
 </summary>
      <param name="Furre">
 Furre Name
 </param>
    </member>
    <member name="M:SilverMonkeyEngine.IO.NameList.Save">
      <summary>
 Saves the Name list to the text file
 </summary>
    </member>
    <member name="M:SilverMonkeyEngine.IO.NameList.SaveAs(System.String)">
      <summary>
 save the list to a new text file
 </summary>
      <param name="ListFile">
 File Name
 </param>
    </member>
    <member name="M:SilverMonkeyEngine.IO.NameList.ToArray">
      <summary>
 Converts the Name list to an Array of names
 </summary>
      <returns>
 string Array of names
 </returns>
    </member>
    <member name="M:SilverMonkeyEngine.IO.NameList.ToShortNamedArray">
      <summary>
 Converts the Name List to a string array
 </summary>
      <returns>
 String array of names in Furcadia Short name format
 </returns>
    </member>
  </members>
</doc>